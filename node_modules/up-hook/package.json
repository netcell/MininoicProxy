{
  "name": "up-hook",
  "version": "0.1.2",
  "main": "./up-hook",
  "dependencies": {
    "connect": "2",
    "debug": "*"
  },
  "readme": "\n# up-hook\n\n`up-hook` is an [up](http://github.com/learnboost/up) middleware that\nenables zero-downtime reloads upon pushing to a GitHub repository\nthrough a git-hook.\n\n## How to use\n\n1. **Add the up-hook middleware**\n\n    ```js\n    var uphook = require('up-hook');\n    srv.use(uphook('/super-secret-url', { branch: 'master', cmd: 'make deploy' }));\n    ```\n\n    In this case it's set up so that when you push to the `master` branch,\n    it will run `make deploy` and, if successful, it'll reload the server.\n\n2. **Add the post-receive hook on GitHub**\n\n    On GitHub, configure a post-receive hook pointing to the URL supplied\n    in the middleware (e.g: `http://yourdomain.com/super-secret-url`)\n\n3. **Enjoy!**\n\n## Running the example\n\n1. Create a new GitHub repository and copy the contents of `example/`.\n2. Deploy the app by running `DEBUG=\"up-hook\" node server`.\n3. Load the page, it should say \"Hi\"\n4. Point a GitHub post-receive hook to \"yourdomain.com/tobi\"\n5. Commit some changes to `app.js` and push to master (eg: turn \"Hi\" into\n   \"Bye\")\n6. Your server will have been reloaded!\n\n## API\n\n```js\nuphook (url, opts, fn)\n```\n\n- `url`: secret url (path + query string) to capture\n- `opts`: options object\n - **branch**: `String|false` branch to capture (`master`)\n - **cmd**: `String` command to execute (`git pull`)\n - **cwd**: `String` optional dir to execute process in\n- `fn` is called with an error if the command fails, or `null` if the\n  reload is triggered\n\n## License\n\nCopyright (c) 2012 LearnBoost &lt;guillermo@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "description": "`up-hook` is an [up](http://github.com/learnboost/up) middleware that enables zero-downtime reloads upon pushing to a GitHub repository through a git-hook.",
  "_id": "up-hook@0.1.2",
  "_from": "up-hook@"
}
